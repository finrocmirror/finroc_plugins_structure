//
// %%INTRO%%
//
// Copyright (C) %%COPYRIGHT%%
//
// %%LICENSE%%
//
//----------------------------------------------------------------------
/*!\file    %%FILE%%
 *
 * \author  %%AUTHOR%%
 *
 * \date    %%DATE%%
 *
 */
//----------------------------------------------------------------------
#include "%%HEADER_PATH%%"

//----------------------------------------------------------------------
// External includes (system with <>, local with "")
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// Internal includes with ""
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// Debugging
//----------------------------------------------------------------------
#include <cassert>

//----------------------------------------------------------------------
// Namespace usage
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// Namespace declaration
//----------------------------------------------------------------------
%%OPEN_NAMESPACE%%

//----------------------------------------------------------------------
// Forward declarations / typedefs / enums
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// Const values
//----------------------------------------------------------------------
static runtime_construction::tStandardCreateModuleAction<g%%NAME%%> cCREATE_ACTION_FOR_G%%NAME_IN_UPPER_CASE%%("%%NAME%%");

//----------------------------------------------------------------------
// Implementation
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// g%%NAME%% constructor
//----------------------------------------------------------------------
g%%NAME%%::g%%NAME%%(core::tFrameworkElement *parent, const std::string &name,
     %%INDENT_TWO_NAMES%%const std::string &structure_config_file) :
  tGroup(parent, name, structure_config_file)
{}

//----------------------------------------------------------------------
// g%%NAME%% destructor
//----------------------------------------------------------------------
g%%NAME%%::~g%%NAME%%()
{}

//----------------------------------------------------------------------
// End of namespace declaration
//----------------------------------------------------------------------
%%CLOSE_NAMESPACE%%
